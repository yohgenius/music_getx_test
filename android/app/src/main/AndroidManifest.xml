<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.music_player_test">
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <application
        android:label="music_player_test"
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher">
        <activity
            android:name="com.ryanheise.audioservice.AudioServiceActivity"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:screenOrientation="portrait"
            android:showWhenLocked="true"
            android:windowSoftInputMode="adjustResize"

            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
<!--        <activity-->
<!--            android:name=".MainActivity"-->
<!--            android:exported="true"-->
<!--            android:launchMode="singleTop"-->
<!--            android:theme="@style/LaunchTheme"-->
<!--            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"-->
<!--            android:hardwareAccelerated="true"-->
<!--            android:windowSoftInputMode="adjustResize">-->
<!--            &lt;!&ndash; Specifies an Android theme to apply to this Activity as soon as-->
<!--                 the Android process has started. This theme is visible to the user-->
<!--                 while the Flutter UI initializes. After that, this theme continues-->
<!--                 to determine the Window background behind the Flutter UI. &ndash;&gt;-->
<!--            <meta-data-->
<!--              android:name="io.flutter.embedding.android.NormalTheme"-->
<!--              android:resource="@style/NormalTheme"-->
<!--              />-->
<!--            <intent-filter>-->
<!--                <action android:name="android.intent.action.MAIN"/>-->
<!--                <category android:name="android.intent.category.LAUNCHER"/>-->
<!--            </intent-filter>-->
<!--        </activity>-->
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
        <service
            android:name="com.dexterous.flutterlocalnotifications.ForegroundService"
            android:exported="false"
            android:stopWithTask="false"/>

        <service
            android:name="com.ryanheise.audioservice.AudioService"
            android:foregroundServiceType="mediaPlayback"
            android:exported="true">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.ryanheise.audioservice.MediaButtonReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>
    </application>
</manifest>
